generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Goal {
  id       String @id @default(cuid())
  authorId String 
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)

  content     String
  description String?
  frequency   Int?
  completedAt DateTime?

  messages GoalMessage[]

  @@unique([id, authorId])
  @@index([authorId])
}

model GoalMessage {
  id       String @id @default(cuid())
  message  String
  goalId   String
  goal     Goal   @relation(fields: [goalId], references: [id], onDelete: Cascade)
  senderId String
  sender   User   @relation(fields: [senderId], references: [id], onDelete: Cascade)
  points   Int

  @@index([goalId])
  @@index([senderId])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String?       @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    goals         Goal[]
    slug          String        @unique
    points        Int           @default(500)
    messages      GoalMessage[]
    streak        Int           @default(0)
    lastSignOn    DateTime      @default(now())
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
